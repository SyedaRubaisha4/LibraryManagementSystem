@{
    Layout = null;
}

@model Models.DBModel.User;
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <title>Sign up</title>
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <meta content="" name="keywords">
    <meta content="" name="description">

    <!-- Favicon -->
    <link href="img/favicon.ico" rel="icon">

    <!-- Google Web Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Heebo:wght@400;500;600;700&display=swap" rel="stylesheet">

    <!-- Icon Font Stylesheet -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.1/font/bootstrap-icons.css" rel="stylesheet">

    <!-- Template Stylesheet -->
    <link href="~/css/style.min.css" rel="stylesheet" />
    <link href="~/css/site.css" rel="stylesheet" />
</head>

<body>
    <div class="container-xxl position-relative bg-white d-flex p-0">
        <div class="container-fluid">
            @if (TempData["UserExists"] != null)
            {
                <div class="position-fixed mt-5 start-50">
                    <div class="toast d-flex" role="alert" aria-live="assertive" aria-atomic="true" data-bs-autohide="false">
                        <div class="toast-header">
                            <strong class="me-auto text-danger">Error</strong>
                            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
                        </div>
                        <div class="toast-body text-danger">
                            @TempData["UserExists"]
                        </div>
                    </div>
                </div>

            }
            @if (TempData["Dob"] != null)
            {
                <div class="position-fixed mt-5 start-50">
                    <div class="toast d-flex" role="alert" aria-live="assertive" aria-atomic="true" data-bs-autohide="false">
                        <div class="toast-header">
                            <strong class="me-auto text-danger">Error</strong>
                            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
                        </div>
                        <div class="toast-body text-danger">
                            @TempData["Dob"]
                        </div>
                    </div>
                </div>

            }
            <div class="row h-100 align-items-center justify-content-center" style="min-height: 100vh;">
                <div class="col-12 col-sm-8 col-md-6 col-lg-6 col-xl-6">
                    <form method="post" asp-action="signup" asp-controller="home" class="needs-validation" novalidate enctype="multipart/form-data">
                        <div class="bg-light rounded p-4 p-sm-5 my-4 mx-3">
                            <div class="d-flex align-items-center justify-content-between mb-3">
                                <h3>Sign Up</h3>
                            </div>

                            <!-- First Name and Last Name in a row -->
                            <div class="row mb-3">
                                <div class="col-12 col-sm-6">
                                    <div class="form-floating">
                                        <input type="text" class="form-control" asp-for="FirstName" name="FirstName" id="floatingFirstName" placeholder="First Name" required>
                                        <label for="floatingFirstName">First Name</label>
                                        <div class="invalid-feedback">First name is required.</div>
                                    </div>
                                </div>
                                <div class="col-12 col-sm-6">
                                    <div class="form-floating">
                                        <input type="text" class="form-control" asp-for="LastName" name="LastName" id="floatingLastName" placeholder="Last Name" required>
                                        <label for="floatingLastName">Last Name</label>
                                        <div class="invalid-feedback">Last name is required.</div>
                                    </div>
                                </div>
                            </div>



                        
                            <div class="row mb-3">
                                <div class="col-12 col-sm-6">
                                    <div class="form-floating">
                                        <input type="text" class="form-control" asp-for="UniversityName" name="UniversityName" id="UniVersityName" placeholder="University Name" required>
                                        <label for="UniVersityName">University Name</label>
                                        <div class="invalid-feedback">A valid University Name is required.</div>
                                    </div>
                                </div>
                                <div class="col-12 col-sm-6">
                                    <div class="form-floating">
                                        <input type="text" class="form-control" asp-for="UniversityAddress" name="UniversityAddress" id="UniversityAddress" placeholder="University Address" required>
                                        <label for="UniversityAddress">University Address</label>
                                        <div class="invalid-feedback">A valid University Address is required.</div>
                                    </div>
                                </div>
                            </div>

                            <!-- First Name and Last Name in a row -->
                            <div class="row mb-3">
                                <div class="col-12 col-sm-6">
                                    <div class="form-floating">
                                        <input type="number" class="form-control" name="Age" id="floatingAge" asp-for="Age" placeholder="Age" required min="18" max="100">
                                        <label for="floatingAge">Age</label>
                                        <div class="invalid-feedback">Age must be between 18 and 100.</div>
                                    </div>
                                </div>
                                <div class="col-12 col-sm-6">
                                    <div class="form-floating">
                                        <input type="text" class="form-control" name="Gender" id="floatingGender" placeholder="Gender" asp-for="Gender" required>
                                        <label for="floatingGender">Gender</label>
                                        <div class="invalid-feedback">Gender is required.</div>
                                    </div>
                                </div>
                            </div>


                     
                        

                            <!-- Date of Birth -->
                            <div class="form-floating mb-4">
                                <input type="date" class="form-control" name="DateofBirth" id="floatingDateofBirth" asp-for="DateOfBirth" required>
                                <label for="floatingDateofBirth">Date of Birth</label>
                                <div class="invalid-feedback">You must be at least 14 years old.</div>
                            </div>

                     

                            <!-- Password -->
                            <div class="form-floating mb-4">
                                <input type="password" class="form-control" name="Password" id="floatingPassword" placeholder="Password" asp-for="Password" required minlength="6">
                                <label for="floatingPassword">Password</label>
                                <div class="invalid-feedback">Password is required and must be at least 6 characters.</div>
                            </div>

                            <!-- Email -->
                            <div class="form-floating mb-4">
                                <input type="email" class="form-control" name="Email" id="floatingEmail" placeholder="Email" asp-for="Email" required>
                                <label for="floatingEmail">Email</label>
                                <div class="invalid-feedback">A valid email is required.</div>
                            </div>



                            <!-- Profile Image -->
                            <div class="form-floating mb-3">
                                <input type="file" class="form-control" name="Image" accept="image/*" asp-for="Image" id="floatingProfileImage">
                                <label for="floatingProfileImage">Profile Image</label>
                            </div>


                            <!-- Hidden Latitude and Longitude fields -->
                            <div class="form-floating mb-4">
                                <input type="hidden" id="Latitude" asp-for="Latitude" name="Latitude" />
                                <input type="hidden" id="Longitude" asp-for="Longitude" name="Longitude" />
                            </div>

                            <!-- Submit Button -->
                            <button type="submit" class="btn btn-primary py-3 w-100 mb-4">Sign Up</button>
                            <p class="text-center mb-0">Already have an Account? <a asp-action="login" asp-controller="Home">Sign In</a></p>
                        </div>
                    </form>
                </div>
            </div>


    <!-- JavaScript Libraries -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

    <!-- Bootstrap Validation Script -->
    <script>

        function getLocation() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition((position) => {
                    document.getElementById("Latitude").value = position.coords.latitude;
                    document.getElementById("Longitude").value = position.coords.longitude;
                }, (error) => {
                    alert("Your loation will not be saved!!! " + error.message);
                });
            } else {
                alert("Geolocation is not supported by this browser.");
            }
        }

        // Call this function on page load or when a button is clicked
        getLocation();

        // Bootstrap form validation
        (function () {
            'use strict'
            // Fetch all the forms we want to apply validation styles to
            var forms = document.querySelectorAll('.needs-validation')

            // Loop over them and prevent submission if they are invalid
            Array.prototype.slice.call(forms)
                .forEach(function (form) {
                    form.addEventListener('submit', function (event) {
                        if (!form.checkValidity()) {
                            event.preventDefault()
                            event.stopPropagation()
                        }
                        form.classList.add('was-validated')
                    }, false)
                })
        })()
    </script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const dobField = document.getElementById("floatingDateofBirth");

            dobField.addEventListener("change", function () {
                const dob = new Date(dobField.value);
                const today = new Date();
                const age = today.getFullYear() - dob.getFullYear();
                const monthDiff = today.getMonth() - dob.getMonth();
                const dayDiff = today.getDate() - dob.getDate();

                // Adjust age if the birthday hasn't occurred yet this year
                if (monthDiff < 0 || (monthDiff === 0 && dayDiff < 0)) {
                    age--;
                }

                if (age < 14) {
                    dobField.classList.add("is-invalid");
                    dobField.classList.remove("is-valid");
                } else {
                    dobField.classList.remove("is-invalid");
                    dobField.classList.add("is-valid");
                }
            });
        });
    </script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Initialize and show toast
            var toastEl = document.querySelector('.toast');
            var toast = new bootstrap.Toast(toastEl);
            toast.show();
        });
    </script>

</body>

</html>
